apply plugin: 'com.android.application'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"
    defaultConfig {
        applicationId "com.chx.androidcloud"
        minSdkVersion 14
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [CLOUD_MODULE_NAME: project.getName()]
            }
        }
    }
    buildTypes {
        debug {
//            minifyEnabled true//开启混淆
//            zipAlignEnabled true
//            shrinkResources true//资源压缩
        }
        release {
            minifyEnabled true//开启混淆
            zipAlignEnabled true
            shrinkResources true//资源压缩
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation "androidx.recyclerview:recyclerview:$Support_Lib_Version"
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    if (Boolean.parseBoolean(service_utils_info_isFromMaven)) {
        implementation "${publishedGroupId}:Service-Utils-Info:${service_utils_info_version}"
    } else {
        implementation project(path: ':Service-Utils:Service-Utils-Info')
    }

    if (Boolean.parseBoolean(service_ui_info_isFromMaven)) {
        implementation "${publishedGroupId}:Service-UI-Info:${service_ui_info_version}"
    } else {
        implementation project(path: ':Service-UI:Service-UI-Info')
    }

    if (Boolean.parseBoolean(cloud_compiler_isFromMaven)) {
        annotationProcessor "${publishedGroupId}:Cloud-Compiler:${cloud_compiler_version}"
    } else {
        annotationProcessor project(path: ':Cloud-Compiler')
    }

    if (Boolean.parseBoolean(service_net_retrofit_isFromMaven)) {
        implementation "${publishedGroupId}:Service-Net-Retrofit:0.0.1"
    } else {
        implementation project(path: ':Service-NetWork:Service-NetWork-Retrofit')
    }
}
